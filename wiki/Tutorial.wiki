#summary Tutorial for TiledGGD
#labels Featured

<wiki:toc />

= Tutorial =

This page will explain how to use the program, and explain some of the features in a bit more detail.


== 1. Program Basiscs ==

If you've ripped sprites with GGD before, you can probably skip this part if you take a look at the shortcuts-list (About->Shortcuts...).

=== 1.1 The window layout ===
I will explain the layout of the window first;

<a href="http://img.photobucket.com/albums/v175/barubary/tggdtut/2_empty_marked.png"> http://img.photobucket.com/albums/v175/barubary/tggdtut/2s_empty_marked.png</a>

If you know what GGD looks like, this will probably look a bit familiar;
 * The red area is where you will look most of the time; it's the Graphics Panel. This is where you'll have to look for sprites.
 * The green area is the Palette Panel; this will determine what colours are used in the Graphics Panel most of the time.
 * The blue area is the Data Panel, displaying data about the Graphics and Palette Panels.

=== 1.2 Loading data ===

Now we're ready to rip some sprites. Obviously, we'll need some data to get the sprites from first. In this part of the tutorial, I will use examples from the DS game Luminous Arc.
There are two ways to load a file;
 * One is by using the File->Open or File->Open Palette menus,
 * The other by simply dragging the file on either the Graphics or Palette panel, loading it as the respective type of data.
Note that loading the first file will automatically load is as the other type as well. This is so that you have at least something to look at in the Graphics Panel.

We have no idea what's in what file, so let's just open the first one; 1.iear.

<a href="http://img.photobucket.com/albums/v175/barubary/tggdtut/3_1iear.png"> http://img.photobucket.com/albums/v175/barubary/tggdtut/3s_1iear.png</a>

=== 1.3 Browse the Palette ===

When we look in the Data Panel, we see that the image format is 4 bits/pixel. This means only the top row of the palette is used to colour the Graphics Panel. Because it's mostly black, we'll scroll down a bit, using the Home and End keys.<br>When you do, you'll notice the palette only scrolling one colour at a time. This is where the Skip Size comes in. You can set it using the Palette->Skip Size menu, or toggle it with Shift+Z. Each time you press Home or End, the Palette Panel will go forward or backward in the data with the amount specified by the Skip Size.

<a href="http://img.photobucket.com/albums/v175/barubary/tggdtut/4_palss.png"> http://img.photobucket.com/albums/v175/barubary/tggdtut/4s_palss.png</a>

You should scroll down until you either reach a palette, or until the currently used palette (in this case the top 16 colours) aren't that similar any more.

<a href="http://img.photobucket.com/albums/v175/barubary/tggdtut/5_palscr.png"> http://img.photobucket.com/albums/v175/barubary/tggdtut/5s_palscr.png</a>

=== 1.4 Resizing the Graphics Panel ===

We've seen that the file is quite large (18 MB), and the current window is quite small, so let's enlarge it, using the arrow keys;

<a href="http://img.photobucket.com/albums/v175/barubary/tggdtut/6_largegr.png"> http://img.photobucket.com/albums/v175/barubary/tggdtut/6s_largegr.png</a>

If you find the enlarging/shrinking goes too fast or too slow, or you need your panel to have a width it cannot get to now (you can see the current size in the Data Panel), you can use the Width Skip Size and Height Skip Size menu's in the Graphics-menu;

<a href="http://img.photobucket.com/albums/v175/barubary/tggdtut/7_grwss.png"> http://img.photobucket.com/albums/v175/barubary/tggdtut/7s_grwss.png</a> <a href="http://img.photobucket.com/albums/v175/barubary/tggdtut/8_grhss.png"> http://img.photobucket.com/albums/v175/barubary/tggdtut/8s_grhss.png</a>

=== 1.5 Browsing the Graphics ===

Browsing the Graphics is practically the same as browsing the Palette, only you use !PageUp and !PageDown instead. There is also a Skip Size menu in the Image menu, from which the alternative is Ctrl+Z;

<a href="http://img.photobucket.com/albums/v175/barubary/tggdtut/9_grss.png"> http://img.photobucket.com/albums/v175/barubary/tggdtut/9s_grss.png</a>

If you've browsed through the whole file; you've probably found nothing worth looking at. A closer inspection at the contents of the file, using among other things a HEX editor, reveals that the file contains only sound data, so it's no wonder there was nothing.<br />
Since the next couple of files also contain no graphics, we'll skip ahead to the first file that does; 5.iear.

== 2. Ripping raw data ==

When you load the file 5.iear, it's hard to say there is no sprite data inside (after you've changed the width a bit, if necessary);

<a href="http://img.photobucket.com/albums/v175/barubary/tggdtut/10_5iear.png"> http://img.photobucket.com/albums/v175/barubary/tggdtut/10s_5iear.png</a>

=== Determining the Graphics Format ===

However, the sprites really don't look like anything yet. Mainly because the is no correct palette, but also because there are vertical lines through them.<br />
The latter generally indicates the graphics format is incorrect. You can set it using Image->Format or by using the B key to toggle it;<br />
(I've already browsed to the correct palette, as you can see)

<a href="http://img.photobucket.com/albums/v175/barubary/tggdtut/11_grform.png"> http://img.photobucket.com/albums/v175/barubary/tggdtut/11s_grform.png</a>

Vertical lines every other column usually means pressing B once should be enough;

<a href="http://img.photobucket.com/albums/v175/barubary/tggdtut/12_8bpp.png"> http://img.photobucket.com/albums/v175/barubary/tggdtut/12s_8bpp.png</a>

The Graphics width is too wide, so the sprites are spread out over the columns. Just resize the panel (and scroll a few bytes) to see the sprites correctly;

<a href="http://img.photobucket.com/albums/v175/barubary/tggdtut/13_corr.png"> http://img.photobucket.com/albums/v175/barubary/tggdtut/13s_corr.png</a>

=== Getting the sprites out of the data ===

There are several ways to get the sprites out of the data. By far the easiest is to simply copy the Graphics Panel contents to the clipboard using Ctrl+C. You can also use the menu version; Image->Copy to clipboard.<br />
The same goes for the palette; you can copy it (as an image) to the clipboard using Ctrl+Shift+C, or the menu version Palette->Copy to clipboard.

You can also save the graphics and/or palette to an image using Ctrl+S or Ctrl+Shift+S respectively. Of course there are also the menu versions File->Save Graphics... and File->Save Palette.... Currently the only possible output is a PNG file. Also, this is the only way to properly copy transparency, as the data sent to the clipboard doesn't handle it properly, if at all.

=== Handling tiled graphics ===

If you look below the plainly visible sprites, you'll see some data that could also be sprites. It could pay off to investigate;

<a href="http://img.photobucket.com/albums/v175/barubary/tggdtut/14_tiled1.png"> http://img.photobucket.com/albums/v175/barubary/tggdtut/14s_tiled1.png</a> <a href="http://img.photobucket.com/albums/v175/barubary/tggdtut/15_tiled2.png"> http://img.photobucket.com/albums/v175/barubary/tggdtut/15s_tiled2.png</a>

At a width of 8 pixels, we can barely see that the data is indeed more sprites. This is where the Graphics Mode comes in. Increase the width again and press the F key to toggle the Graphics Mode (or use the menu: Image->Mode);

<a href="http://img.photobucket.com/albums/v175/barubary/tggdtut/16_tiled3.png"> http://img.photobucket.com/albums/v175/barubary/tggdtut/16s_tiled3.png</a>

It looks a bit garbled again, but it's nothing some scrolling won't fix;

<a href="http://img.photobucket.com/albums/v175/barubary/tggdtut/17_tiled4.png"> http://img.photobucket.com/albums/v175/barubary/tggdtut/17s_tiled4.png</a>

Unfortunately, it seems this game has two copies of almost every sprite saved; one 'Linear' and one 'Tiled' version, and these sprites are just a copy of the ones we saw before.

== Ripping NCGR/NCBR's and NCLR's ==

One of the future features of TiledGGD is the support of plugins, so that you can extract only specific data from the files instead of all the data. The built-in support for NCGR/NCBR and NCLR files is basically an internal plug-in, since it will ignore the header data of the files and only view the data that can possible contain sprite data.
An example: (left is without the use of the support, right with it)

<a href="http://img.photobucket.com/albums/v175/barubary/tggdtut/18_ninfiles1.png"> http://img.photobucket.com/albums/v175/barubary/tggdtut/18s_ninfiles1.png</a> <a href="http://img.photobucket.com/albums/v175/barubary/tggdtut/19_ninfiles2.png"> http://img.photobucket.com/albums/v175/barubary/tggdtut/19s_ninfiles2.png</a>

(You may have noticed that this looks like data in 05.iear. This is because it _is_. The iear files are archives, which I unpacked. I will not explain how here, since it is not what this tutorial (nor program) is about. There are lots of other DS games that use the same default Nintendo image format, which produce similar results)

A word of warning, though. Not every NCGR/NCBR file has the proper width and height stored in its file. Therefore it is usually wise to check if there is still more in the file than  currently shown by increasing the panel height a few pixels.

Also, if you want to see the graphics loaded without the built-in plugin, use the menus Image/Palette ->Reload as;
 * 'Reload as->Generic data' reloads the data without the plugin
 * 'Reload as->Specific data' reloads the data with the plugin

